// Generated by CoffeeScript 1.8.0
(function() {
  this.SimpleVast = (function() {
    function SimpleVast(options) {
      var get, getNextTag, getTagData, name, tryCount, _self;
      name = 'simple VAST';
      if (!options) {
        console.log("" + name + " options undefined!");
        return false;
      }
      if (options.dbg) {
        console.log("" + name + ": inited!");
      }
      _self = this;
      tryCount = 0;
      this.getAd = function(callback) {
        _self.completeCallback = callback;
        return getTagData();
      };
      getTagData = function() {
        var tag;
        tag = getNextTag();
        if (tag) {
          if (options.dbg) {
            console.log("" + name + ": try get tag â„–" + tryCount + " " + tag);
          }
          return get(tag, (function(_this) {
            return function(data) {
              if (data) {
                return _self.completeCallback(data);
              } else {
                return getTagData();
              }
            };
          })(this));
        } else {
          return _self.completeCallback(null);
        }
      };
      getNextTag = function() {
        if (options.dbg) {
          console.log("............ \n" + name + ": check if tag exists");
        }
        tryCount++;
        if (options.vastTags[tryCount - 1]) {
          return options.vastTags[tryCount - 1];
        } else {
          if (options.dbg) {
            console.log("" + name + ": no more tags");
          }
          return false;
        }
      };
      get = function(url, callback) {
        var xhr;
        xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.onreadystatechange = function() {
          var err;
          if (xhr.readyState === 4) {
            if (xhr.status !== 200) {
              if (options.dbg) {
                console.log("" + name + ": response error");
              }
              return callback(null);
            } else {
              try {
                return callback(this.responseXML.documentElement);
              } catch (_error) {
                err = _error;
                if (options.dbg) {
                  console.log("" + name + ": unknown response");
                }
                return callback(null);
              }
            }
          }
        };
        return xhr.send();
      };
    }

    return SimpleVast;

  })();

}).call(this);

//# sourceMappingURL=simpleVast.js.map
